apiVersion: apps/v1
kind: Deployment
metadata:
  name: springapp
  namespace: test-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: springapp
  template:
    metadata:
      labels:
        app: springapp
    spec:
      containers:
      - name: springappcontainer
        image: ravisrma/spring-boot-mongo:2
        ports:
        - containerPort: 8080
        env:
        - name: MONGO_DB_HOSTNAME
          valueFrom:
            configMapKeyRef:
              name: springbootconfig
              key: spring.data.mongodb.host
        - name: MONGO_DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: springbootconfig
              key: spring.data.mongodb.username
        - name: MONGO_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: springappsecret
              key: spring.data.mongodb.password
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"

---
apiVersion: v1
kind: Service
metadata:
  name: springappsvc
  namespace: test-ns
spec:
  selector:
    app: springapp
  type: LoadBalancer
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: mongo
  namespace: test-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongodbcontainer
        image: mongo:latest
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            configMapKeyRef:
              name: springbootconfig
              key: spring.data.mongodb.username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: springappsecret
              key: spring.data.mongodb.password
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        volumeMounts:
        - name: springbootscpvc
          mountPath: /data/db
      volumes:
      - name: springbootscpvc
        persistentVolumeClaim:
          claimName: springbootscpvc
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: test-ns
spec:
  selector:
    app: mongo
  ports:
  - port: 27017
    targetPort: 27017
